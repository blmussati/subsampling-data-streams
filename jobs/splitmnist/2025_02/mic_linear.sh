#!/bin/bash

python  cal.py  --multirun  rng.seed=range\(3\)  experiment_name=EmbSplitMNIST_MIClinear data=splitmnist/embedding_curated   data.label_counts_main.target=0  data.batch_sizes.train=32  model=pytorch_fc_net_3layer  model.hidden_sizes=[100,100]  trainer=pytorch_neural_net_classif  trainer.optimizer.lr=0.03   trainer.n_optim_steps_max=500    acquisition.method=mic_linear  acquisition.n_train_labels_end=20   eval_every_acq_step=True
python  cal.py  --multirun  rng.seed=range\(3\)  experiment_name=EmbSplitMNIST_MIClinear data=splitmnist/embedding_curated   data.label_counts_main.target=0  data.batch_sizes.train=32  model=pytorch_fc_net_3layer  model.hidden_sizes=[100,100]  trainer=pytorch_neural_net_classif  trainer.optimizer.lr=0.01   trainer.n_optim_steps_max=10000  acquisition.method=mic_linear  acquisition.n_train_labels_end=50   eval_every_acq_step=True
python  cal.py  --multirun  rng.seed=range\(3\)  experiment_name=EmbSplitMNIST_MIClinear data=splitmnist/embedding_curated   data.label_counts_main.target=0  data.batch_sizes.train=32  model=pytorch_fc_net_3layer  model.hidden_sizes=[100,100]  trainer=pytorch_neural_net_classif  trainer.optimizer.lr=0.03   trainer.n_optim_steps_max=10000  acquisition.method=mic_linear  acquisition.n_train_labels_end=100  eval_every_acq_step=True

python  cal.py  --multirun  rng.seed=range\(3\)  experiment_name=EmbSplitMNIST_MIClinear data=splitmnist/embedding_curated   data.label_counts_main.target=0  data.batch_sizes.train=32  model=pytorch_fc_net_3layer  model.hidden_sizes=[100,100]  trainer=pytorch_neural_net_classif  trainer.optimizer.lr=0.03   trainer.n_optim_steps_max=500    acquisition.method=random  acquisition.n_train_labels_end=20   eval_every_acq_step=True
python  cal.py  --multirun  rng.seed=range\(3\)  experiment_name=EmbSplitMNIST_MIClinear data=splitmnist/embedding_curated   data.label_counts_main.target=0  data.batch_sizes.train=32  model=pytorch_fc_net_3layer  model.hidden_sizes=[100,100]  trainer=pytorch_neural_net_classif  trainer.optimizer.lr=0.01   trainer.n_optim_steps_max=10000  acquisition.method=random  acquisition.n_train_labels_end=50   eval_every_acq_step=True
python  cal.py  --multirun  rng.seed=range\(3\)  experiment_name=EmbSplitMNIST_MIClinear data=splitmnist/embedding_curated   data.label_counts_main.target=0  data.batch_sizes.train=32  model=pytorch_fc_net_3layer  model.hidden_sizes=[100,100]  trainer=pytorch_neural_net_classif  trainer.optimizer.lr=0.03   trainer.n_optim_steps_max=10000  acquisition.method=random  acquisition.n_train_labels_end=100  eval_every_acq_step=True