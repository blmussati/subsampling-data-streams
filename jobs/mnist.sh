# Supervised
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_supervised     data=mnist/image_curated_pool       model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_supervised     data=mnist/image_curated_pool       model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_supervised     data=mnist/image_curated_pool       model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_supervised     data=mnist/image_curated_approx     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_supervised     data=mnist/image_curated_pool       model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=marg_entropy
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_supervised     data=mnist/image_curated_pool       model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=badge         acquisition.batch_size=10
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_pool    model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_pool    model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_pool    model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_test    model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_approx  model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_pool    model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=marg_entropy
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_unbalanced_supervised  data=mnist/image_unbalanced_pool    model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=badge         acquisition.batch_size=10
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_pool     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_pool     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_pool     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_test     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_approx   model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_pool     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=marg_entropy
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_supervised   data=mnist/image_redundant_pool     model=pytorch_conv_net_batchbald2_mcdo  trainer=pytorch_neural_net_classif_mcdo  acquisition.method=badge         acquisition.batch_size=10

# Semi-supervised
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=greedy_k_centers  acquisition.batch_size=10
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=k_means           acquisition.batch_size=10
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=probcover         acquisition.batch_size=10
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_rf  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=typiclust         acquisition.batch_size=10
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_nn  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=pytorch_fc_net_1layer          trainer=pytorch_neural_net_classif_la  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_nn  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=pytorch_fc_net_1layer          trainer=pytorch_neural_net_classif_la  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_simclr_nn  data=mnist/embedding_curated    data.dataset.embedding_type=simclr  model=pytorch_fc_net_1layer          trainer=pytorch_neural_net_classif_la  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_vae_rf     data=mnist/embedding_curated    data.dataset.embedding_type=vae     model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_vae_rf     data=mnist/embedding_curated    data.dataset.embedding_type=vae     model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_vae_rf     data=mnist/embedding_curated    data.dataset.embedding_type=vae     model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_vae_nn     data=mnist/embedding_curated    data.dataset.embedding_type=vae     model=pytorch_fc_net_1layer          trainer=pytorch_neural_net_classif_la  acquisition.method=random
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_vae_nn     data=mnist/embedding_curated    data.dataset.embedding_type=vae     model=pytorch_fc_net_1layer          trainer=pytorch_neural_net_classif_la  acquisition.method=bald
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_curated_semi_vae_nn     data=mnist/embedding_curated    data.dataset.embedding_type=vae     model=pytorch_fc_net_1layer          trainer=pytorch_neural_net_classif_la  acquisition.method=epig
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=random                                       adjust_test_predictions=True
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=bald                                         adjust_test_predictions=True
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=epig                                         adjust_test_predictions=True
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=greedy_k_centers  acquisition.batch_size=10  adjust_test_predictions=True
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=k_means           acquisition.batch_size=10  adjust_test_predictions=True
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=probcover         acquisition.batch_size=10  adjust_test_predictions=True
python  main.py  --multirun  rng.seed=range(20)  experiment_name=mnist_redundant_semi          data=mnist/embedding_redundant  data.dataset.embedding_type=simclr  model=sklearn_random_forest_classif  trainer=sklearn_random_forest_classif  acquisition.method=typiclust         acquisition.batch_size=10  adjust_test_predictions=True